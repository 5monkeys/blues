global
    log 127.0.0.1   local0
    log 127.0.0.1   local1 notice
    tune.ssl.default-dh-param 2048
    maxconn 16384
    user haproxy
    group haproxy
    daemon
    stats socket /var/run/haproxy.sock mode 0600 level admin


defaults
    log         global
    mode        http
    option      httplog
    option      dontlognull
    retries     3
    option      redispatch
    maxconn     4000
    timeout connect  5000
    timeout client  50000
    timeout server  50000
    option      httpclose
    option      forceclose
{% for ip in settings.forwardfor.except %}
    option      forwardfor except {{ ip }}
{% endfor %}

    # Error files
    errorfile   400 /etc/haproxy/errors/400.http
    errorfile   403 /etc/haproxy/errors/403.http
    errorfile   408 /etc/haproxy/errors/408.http
    errorfile   500 /etc/haproxy/errors/500.http
    errorfile   502 /etc/haproxy/errors/502.http
    errorfile   503 /etc/haproxy/errors/503.http
    errorfile   504 /etc/haproxy/errors/504.http

    # Set some defaults
    balance     source
    hash-type   map-based


# Monitoring (for i < nbproc)
listen monitoring
    bind            0.0.0.0:4343

    # Stats
    stats       {{ settings.stats.status }}
    stats       hide-version
    stats       auth {{ settings.stats.auth }}
    stats       uri /admin?status
    stats       refresh 10s
    stats admin if TRUE


# Frontend

{% for frontend_name in settings.frontends %}{% set frontend = settings.frontends[frontend_name] %}
frontend {{ frontend_name }}
    bind            {{ frontend.ip }}:80
    bind            {{ frontend.ip }}:443 ssl crt {{ frontend.ssl_crt }}
    timeout client  {{ frontend.timeout }}
    option          forwardfor except {{ frontend.ip }}
    {% if 'redirect' in frontend %}{% for host in frontend.redirect.from_hosts %}
    redirect prefix {{ frontend.redirect.to_url }} code 301 if { hdr(host) -i {{ host }} }
    {% endfor %}{% endif %}
    redirect scheme https if !{ ssl_fc }
    default_backend {{ frontend.default_backend }}
{% endfor %}


# Backends

{% for backend_name in settings.backends %}{% set backend = settings.backends[backend_name] %}
backend {{ backend_name }}
    option  httpchk GET / HTTP/1.1\r\nHost:\ {{ backend.test_host }}
    balance {{ backend.balance }}
    timeout server {{ backend.timeout }}
    {% for server_name in backend.servers %}{% set server = backend.servers[server_name] %}
    server  {{ server_name }} {{ server.host }}:{{ server.port }} {% if server.check.enabled %}check inter {{ server.check.inter }}{% endif %}{% if 'weight' in server %} weight {{ server.weight }}{% endif %}{% if 'port' in server.check %} port {{ server.check.port }}{% endif %}{% if server.backup %} backup{% endif %}
    {% endfor %}
    server  localhost 127.0.0.1:8080 backup
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
{% endfor %}
